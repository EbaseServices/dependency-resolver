# This workflow will build the python app on release and upload it to the release as an asset.

name: Build and Upload Upon Release

on:
  release:
    types: [published]

jobs:
  release-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'  # Use latest Python 3.x
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        
    - name: Build release
      run: python -m build

    - name: Upload distribution files to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz

    - name: Upload distribution files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/


# This workflow will upload a Python Package to PyPI when a release is created
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: production
      url: https://pypi.org/p/dependency-resolver
      
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
